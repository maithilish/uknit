package org.codetab.uknit.itest.ctlflow.trycatch;

import org.codetab.uknit.itest.model.Duck;

public class TryNestIfNoCatchTest {
    @InjectMocks
    private TryNestIfNoCatch tryNestIfNoCatch;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testTryNestIfNoCatchFooTryIfCanSwim() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryNestIfNoCatchFoo(duck, canSwim);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("try if");
        verify(duck, never()).swim("try else");
        verify(duck).swim("finally");
        verify(duck).swim("end");
    }

    @Test
    public void testTryNestIfNoCatchFooTryElseCanSwim() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryNestIfNoCatchFoo(duck, canSwim);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck, never()).swim("try if");
        verify(duck).swim("try else");
        verify(duck).swim("finally");
        verify(duck).swim("end");
    }

    @Test
    public void testTryFinallyNestIfNoCatchFooTryIfCanSwim() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryFinallyNestIfNoCatchFoo(duck, canSwim);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("finally");
        verify(duck).swim("finally if");
        verify(duck, never()).swim("finally else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryFinallyNestIfNoCatchFooTryElseCanSwim() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryFinallyNestIfNoCatchFoo(duck, canSwim);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("finally");
        verify(duck, never()).swim("finally if");
        verify(duck).swim("finally else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryNestIfPlusIfNoCatchFooTryIfCanSwimIfDone() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryNestIfPlusIfNoCatchFoo(duck, canSwim, done);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("try if");
        verify(duck, never()).swim("try else");
        verify(duck).swim("finally");
        verify(duck).swim("if");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryNestIfPlusIfNoCatchFooTryIfCanSwimElseDone() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryNestIfPlusIfNoCatchFoo(duck, canSwim, done);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("try if");
        verify(duck, never()).swim("try else");
        verify(duck).swim("finally");
        verify(duck, never()).swim("if");
        verify(duck).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryNestIfPlusIfNoCatchFooTryElseCanSwim() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryNestIfPlusIfNoCatchFoo(duck, canSwim, done);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck, never()).swim("try if");
        verify(duck).swim("try else");
        verify(duck).swim("finally");
        verify(duck).swim("if");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryFinallyNestIfPlusIfNoCatchFooTryIfCanSwimIfDone() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryFinallyNestIfPlusIfNoCatchFoo(duck, canSwim, done);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("finally");
        verify(duck).swim("finally if");
        verify(duck, never()).swim("finally else");
        verify(duck).swim("if");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryFinallyNestIfPlusIfNoCatchFooTryIfCanSwimElseDone() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryFinallyNestIfPlusIfNoCatchFoo(duck, canSwim, done);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("finally");
        verify(duck).swim("finally if");
        verify(duck, never()).swim("finally else");
        verify(duck, never()).swim("if");
        verify(duck).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testTryFinallyNestIfPlusIfNoCatchFooTryElseCanSwim() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = tryNestIfNoCatch.tryFinallyNestIfPlusIfNoCatchFoo(duck, canSwim, done);

        assertEquals(apple, actual);
        verify(duck).swim("start");
        verify(duck).swim("try");
        verify(duck).swim("finally");
        verify(duck, never()).swim("finally if");
        verify(duck).swim("finally else");
        verify(duck).swim("if");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }
}
