package org.codetab.uknit.itest.ex;

import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

public class DealsServiceAdapterTest {
    @InjectMocks
    private DealsServiceAdapter dealsServiceAdapter;

    @Mock
    private DealsServiceClient dealsService;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testSafeGetDealsTry() throws Exception {
        String userId = "Foo";
        GetDealsRequest request = new GetDealsRequest();
        Deal deal = Mockito.mock(Deal.class);
        List<Deal> list = new ArrayList<>();

        when(dealsService.getDeals(request)).thenReturn(deal);
        when(deal.getActiveDeals()).thenReturn(list);

        List<DisplayDeal> actual = dealsServiceAdapter.safeGetDeals(userId);
        fail("unable to assert, STEPIN");
    }

    @Test
    public void testSafeGetDealsTryCatchServiceException() throws Exception {
        String userId = "Foo";
        GetDealsRequest request = new GetDealsRequest();
        Deal deal = Mockito.mock(Deal.class);
        List<Deal> list = new ArrayList<>();

        when(dealsService.getDeals(request)).thenReturn(deal);
        when(deal.getActiveDeals()).thenReturn(list);

        List<DisplayDeal> actual = dealsServiceAdapter.safeGetDeals(userId);
        fail("unable to assert, STEPIN");
    }

    @Test
    public void testSafeGetDealsTryCatchNetworkException() throws Exception {
        String userId = "Foo";
        GetDealsRequest request = new GetDealsRequest();
        Deal deal = Mockito.mock(Deal.class);
        List<Deal> list = new ArrayList<>();

        when(dealsService.getDeals(request)).thenReturn(deal);
        when(deal.getActiveDeals()).thenReturn(list);

        List<DisplayDeal> actual = dealsServiceAdapter.safeGetDeals(userId);
        fail("unable to assert, STEPIN");
    }
}
