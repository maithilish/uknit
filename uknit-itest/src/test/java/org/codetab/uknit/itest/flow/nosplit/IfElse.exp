package org.codetab.uknit.itest.flow.nosplit;

import org.codetab.uknit.itest.flow.nosplit.Model.Duck;
class IfElseTest {
    @InjectMocks
    private IfElse ifElse;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testIfFoo() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = ifElse.ifFoo(duck, canSwim);

        assertEquals(apple, actual);

        verify(duck).swim("start");
        verify(duck).swim("if");
        verify(duck).swim("end");
    }

    @Test
    public void testIfElseFoo() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = ifElse.ifElseFoo(duck, canSwim);

        assertEquals(apple, actual);

        verify(duck).swim("start");
        verify(duck).swim("if");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testIfNestIfFoo() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = ifElse.ifNestIfFoo(duck, canSwim, done);

        assertEquals(apple, actual);

        verify(duck).swim("start");
        verify(duck).swim("if");
        verify(duck).swim("if if");
        verify(duck, never()).swim("if else");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }

    @Test
    public void testIfIfFoo() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = ifElse.ifIfFoo(duck, canSwim, done);

        assertEquals(apple, actual);

        verify(duck).swim("start");
        verify(duck).swim("if");
        verify(duck, never()).swim("else");
        verify(duck).swim("if if");
        verify(duck, never()).swim("if else");
        verify(duck).swim("end");
    }

    @Test
    public void testIfNestIfIfFoo() {
        Duck duck = Mockito.mock(Duck.class);
        boolean canSwim = true;
        boolean canDive = true;
        boolean done = true;
        String apple = "Foo";

        when(duck.toString()).thenReturn(apple);

        String actual = ifElse.ifNestIfIfFoo(duck, canSwim, canDive, done);

        assertEquals(apple, actual);

        verify(duck).swim("start");
        verify(duck).swim("if");
        verify(duck).swim("nest if");
        verify(duck, never()).swim("nest else");
        verify(duck).swim("nest if if");
        verify(duck, never()).swim("nest if else");
        verify(duck, never()).swim("else");
        verify(duck).swim("end");
    }
}
