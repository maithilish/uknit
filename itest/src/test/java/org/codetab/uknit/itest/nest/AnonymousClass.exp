package org.codetab.uknit.itest.nest;

import java.io.File;
import java.io.FileFilter;

public class AnonymousClassTest {
    @InjectMocks
    private AnonymousClass anonymousClass;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testAnonymousReturn() {
        File file = Mockito.mock(File.class);

        FileFilter actual = anonymousClass.anonymousReturn(file);
        fail("unable to assert, STEPIN");
    }

    @Test
    public void testAnonymousArg() {
        File file = Mockito.mock(File.class);
        File[] hiddenFiles = {};

        when(file.listFiles(any(FileFilter.class))).thenReturn(hiddenFiles);

        File[] actual = anonymousClass.anonymousArg(file);

        assertArrayEquals(hiddenFiles, actual);

        ArgumentCaptor<FileFilter> captorA = ArgumentCaptor.forClass(FileFilter.class);
        verify(file).listFiles(captorA.capture());
    }

    @Test
    public void testMockFilter() {
        File file = Mockito.mock(File.class);
        FileFilter filter = Mockito.mock(FileFilter.class);
        File[] hiddenFiles = {};

        when(file.listFiles(filter)).thenReturn(hiddenFiles);

        File[] actual = anonymousClass.mockFilter(file, filter);

        assertArrayEquals(hiddenFiles, actual);
    }

    @Test
    public void testAnonymousInVerify() {
        File file = Mockito.mock(File.class);
        anonymousClass.anonymousInVerify(file);
        ArgumentCaptor<FileFilter> captorA = ArgumentCaptor.forClass(FileFilter.class);

        verify(file).listFiles(captorA.capture());
    }
}
