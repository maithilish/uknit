package org.codetab.uknit.itest.exp.value;

import org.codetab.uknit.itest.exp.value.Model.Foo;
class MultiDimArrayAccessTest {
    @InjectMocks
    private MultiDimArrayAccess multiDimArrayAccess;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testLiteral() {
        Foo foo = Mockito.mock(Foo.class);
        String apple = "foo";
        String grape = "bar";
        int orange = 1;
        int kiwi = 2;
        int mango = 11;
        int banana = 12;
        String cherry = "foo1";
        String apricot = "bar1";
        String peach = "foo2";
        String fig = "bar2";
        String plum = "foox";
        String lychee = "barx";
        String scrappy = "foox";
        String barracuda = "barx";
        multiDimArrayAccess.literal(foo);

        verify(foo).append(apple);
        verify(foo).append(grape);
        verify(foo).append(orange);
        verify(foo).append(kiwi);
        verify(foo).append(mango);
        verify(foo).append(banana);
        verify(foo).append(cherry);
        verify(foo).append(apricot);
        verify(foo).append(peach);
        verify(foo).append(fig);
        verify(foo, times(2)).append(plum);
        verify(foo, times(2)).append(lychee);
    }

    @Test
    public void testArgIsMultiDimArrayAccess() {
        Foo foo = Mockito.mock(Foo.class);
        String apple = "bar1";
        String grape = "barx";
        String mango = "barx";
        multiDimArrayAccess.argIsMultiDimArrayAccess(foo);

        verify(foo).append(apple);
        verify(foo, times(2)).append(grape);
    }
}
